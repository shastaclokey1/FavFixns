The purpose of this document is to outline the homepage in more detail and work through any snafoos I encounter when building it.

- I want a nav bar with the logo which I will need to make and nothing else.
- I want a white background.
- I want a decending list of large text labels with checkboxes on the left.
- I want a big red button at the bottom that says "Generate Shopping List"
	- When the button is clicked, I will use frontend js to package up which checkboxes are ticked into a link and launch that link to be caught by the node.js/express backend route handling.
	- The route handling will decode which checkboxes were ticked, put together the ingredients list, and launch the shopping list page with the list as an ejs variable that is accessable by the front end.
	- The front end can just loop through the list and display each item.
	- I could make the ejs variable I pass in be a "weeklyMeals" class with subclasses called "mealLists" that each contained one string for the name of the meal and a list of strings for the ingredients needed for that meal.
	- I think that would be the way to go as this would let me separate the shopping list page out into sections for each meal.
	- I could even have a toggle on the home page specifying whether to group the list by meal or just glom all the ingredients into one list.
	- If I do this, the conglomerate list can use a hash map so that any ingrediente that is listed twice will get sorted into the same "bucket" and I can use the number of items in a bucket to specify a x2 x3 ... xn amount of any given ingredient.
- I also want the homepage to be able to specify the ammount of any one dish so that we can say "I want 3 ceaser salads" and it generates a list with all the right ingredients.

- My next step is to copy over the project for John's website into this directory and start altering it to fit the needs of this project.
- Ooo, before that I'll make this a git repository.
- I was able to get the homepage almost all the way built.
- I defined a JSON object with a couple of our favorite meals in the back end.
- I then used the Object.keys() function to get a list of strings of the meal names.
- I passed that list as an ejs variable to the homepage front end.
- I then displayed each name with a checkbox next to it.
- My next step is to make a button that launches to the shopping list page.
- The button will have to have an href that is defined each time a checkbox is checked.
- The custom href will have x 0s or 1 in a querey string representing the states of the x checkboxes.
- These states will be decoded by the shopping list route catcher backend code.
- I'll work on this either tonight or tomorrow :) probably tomorrow because I'm going surfing tonight!
- I was able to get the app fully functional!
- It needs a logo and I need to add in the rest of our meals, but I can now select from a set of meals, click a button, and a list of all the ingredients I need to buy comes right up.
- Maybe I'll add checkboxes to the left of each of the items displayed on the shopping list page.
- Anyway, I think this will be a really useful app.
- We added in all our regular recipes :)
- I definitely want to have the ability to add and remove ingredients to/from the shopping list.
- I want to get this hosted on heroku so I can use it :)
- I added the app to heroku and figured out how to make the domain favfixns.herokuapp.com Woo!!
- My next step is to add checkboxes to the shopping list screen so we can use it while shopping.
	- Scratch that! The checkboxes look super lame.
	- I am going to try to put a strike-through over the text if I click the label.
	- That should look better.
	- I did it with jQuerey and it was super easy.
	- I just used the $(this).toggleClass() function inside a $("label").click() listener.
- My next step is to add buttons next to the labels to remove the element.
	- Woohoo! I couldn't use buttons or link tags because they kept rerouting me back to the page and loading all the list items again, so I used another label and set an click listener with jquery that removes the parent element
	- Done and done.
- My next step is to add an input at the botton that adds in new ingredients.
	- I wasn't able to do this yet, but I'll add it in soon :)
- I was able to fix the problem where one extra empty ingredient was being displayed on the shopping list because of an extra comma.
	- Just returned the substring minus the last character.
- Now I'll upload and see how it looks! :)
- I am now going to tackle adding in the input at the bottom that adds in new ingredients.
	- I got it!!
	- I needed to use the .val() jquery method to get the input text to put in the new label item.
	- I also needed to switch to switch to using event delegation instead of directly binding events to tags that could change due to dynamic dom manipuulation.
	- This makes complete sense as the dom is changing so the direct bindings I set up would get wiped out.
	- The document doesn't ever get wiped out, so setting up events with $(document).on('event','selector',callback_function) will always be the way to go
- My next task is to add in a hash function such that I can combine duplicate ingredients, only list them once on the shopping list page, and put a multiple next to them for how many to buy.
	- I will need to add each item to the has table how ever many times the "quantity" field dictates from the json list of meals.
	- I will then need to pass the hash table to the front end.
	- I think I can make my hash table with a list of objects where the first field of the object is the text field and the second field of the object is the quantity field.
	- Actually, I am going to do a quick google search for js hash maps.
	- Looks like my best bet will be to have the words be the keys and the quantities be the values.
	- Let's do it!
	- I did it!
	- I now have an app that consolodates all the ingredients down to hash buckets and counts the number of ingredients in each bucket there are in order to display that many on the shopping list page :)
	- Woo!
- I need to clear out the "add ingredient" input text field whenever I add an ingredient so it is ready to add another item.
	- Did it!
	- All I had to do was pass the empty string ("") to the $(selector).val("") jquery function.
- I need to make a logo for the website.
	- I made the logo and I really like it.
	- I have the same red as lonevid with a pie, a dinner plate, and a soup bowl clip art under the two f's and the n.
	- I really like Free Logo Maker.
	- https://logomakr.com/4bThAe#
- I think the app is "done" for now.
- I want to start researching how to use mongoDB to save data.
- I will do this in another document.
- I will also research authentication.
- Maybe that will be another research document.
